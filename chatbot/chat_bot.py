from nltk.chat.util import Chat, reflections
from chatbot.patterns_handler import PatternsHandler


class ChatBot:
    """
    A class to represent a chatbot that uses predefined patterns and reflections to respond to user inputs.

    Attributes:
        chat_bot (Chat): The NLTK Chat instance used for conversation.
        utils: Utility instance for logging.
        db_handler: Database handler instance for accessing and manipulating database records.
        patterns_handler (PatternsHandler): Instance to handle and retrieve chat patterns.
    """
    def __init__(self, db_handler, utils):
        """
        Initialize the ChatBot with a database handler, utilities, and pattern handler.

        Args:
            db_handler: The database handler instance.
            utils: Utility instance containing logger.
        """
        self.chat_bot = None
        self.utils = utils
        self.db_handler = db_handler
        self.patterns_handler = PatternsHandler(db_handler)
        self._initialize_bot()

    def _initialize_bot(self):
        """
        Initialize the chatbot with patterns retrieved from the PatternsHandler.
        """
        patterns = self.patterns_handler.get_patterns()
        self.chat_bot = Chat(patterns, reflections)
        self.utils.logger.info("ChatBot initialized successfully")

    def respond(self, user_input):
        """
        Generate a response to the user input.

        Args:
            user_input (str): The input string from the user.

        Returns:
            str: The response generated by the chatbot.
        """
        if self.chat_bot:
            response = self.chat_bot.respond(user_input.lower())
            if not response:
                return ("Sorry, I don't have information on that specific topic."
                        "If you need help, type 'help' in the chat.")
            return response

        self.utils.logger.error("ChatBot was not initialized properly")
        return "Something went wrong... Please try again later"
